openapi: 3.0.3
info:
  title: PxApi
  version: '1.0'
  description: "This api is part of the PX-family.\r\n Q: Should the tables and the navigate endpoint have different backends(Lucene vs sql)?"
paths:
  /topictree:
    get:
      tags:
        - TopicTree
      summary: "This has an include part, in stead of nested elements. \r\n The topictree starts here. Gets the treenode at the root node"
      operationId: GetTopics
      parameters:
        - $ref: '#/components/parameters/levelsParam'
        - $ref: '#/components/parameters/langParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTreeNode'
        '429':
          $ref: '#/components/responses/ErrorResponse429'
  /topictree/{id}:
    get:
      tags:
        - TopicTree
      summary: Gets the TreeNode for the node with the given id.
      operationId: GetTopicsById
      parameters:
        - $ref: '#/components/parameters/levelsParam'
        - $ref: '#/components/parameters/treenodeIdParam'
        - $ref: '#/components/parameters/langParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTreeNode'
components:
  parameters:
    langParam:
      name: lang
      in: query
      description: The language if the default is not what you want.
      required: false
      schema:
        type: string
      examples:
        X1:
          value: en
          summary: For english
        X2:
          value: dk
          summary: For danish
    treenodeIdParam:
      name: id
      in: path
      description: The TreeNode-id of the desired node
      required: true
      schema:
        type: string
    levelsParam:
      name: levels
      in: query
      description: Number of levels that are fetched in the response. Minimun 0, which will fetch all levels in the topictree.
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 0
  schemas:
    BaseResponse:
      type: object
      description: Common properties for all responses. Abstract class.
      properties:
        error:
          type: string
          description: Errors will come here
          nullable: true
        info:
          type: string
          description: Messages on planed maintainence willl come here.
          nullable: true
      example:
        error: The id cant be found
        info: Closed on mondays
    ResponseTreeNode:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BaseTreeNode'
      description: This holds information about the topictree of the api.
    Link:
      type: object
      properties:
        rel:
          type: string
          nullable: true
        href:
          type: string
          nullable: true
      additionalProperties: false
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://zalando.github.io/problem/constraint-violation
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
    BaseTreeNode:
      type: object
      properties:
        id:
          type: string
          nullable: true
        treeNodeType:
          type: string
          nullable: true
          description: One of heading, table or folder
        label:
          type: string
          nullable: true
          description: Display text
        description:
          type: string
          nullable: true
          description: Longer text describing node.
        sortOrder:
          type: string
          description: Sort order.
      discriminator:
         propertyName:  treeNodeType
         mapping:
           table: '#/components/schemas/TableTreeNode'
           heading: '#/components/schemas/HeadingTreeNode'
           folder: '#/components/schemas/FolderTreeNode'
      anyOf:
        - $ref: '#/components/schemas/TableTreeNode'
        - $ref: '#/components/schemas/HeadingTreeNode'
        - $ref: '#/components/schemas/FolderTreeNode'
    TableTreeNode:
      allOf:
        - $ref: '#/components/schemas/BaseTreeNode'
        - type: object
          description: Table treeNode
          properties:
            updated:
              type: string
              description: For treeNodeType "table"
              format: date-time
              nullable: true
            tags:
              type: array
              items:
                type: string
                description: tag for treenode
              nullable: true
            category:
              type: string
              description: Mostly for internal use. Which category table belongs to. internal, official, private or section. I, O, P, S
              default: official
              enum:
              - internal
              - official
              - private
              - section     
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              description: Not for Heading
              nullable: true
    FolderTreeNode:
      allOf:
        - $ref: '#/components/schemas/BaseTreeNode'
        - type: object
          description: Folder node
          properties:
            tags:
              type: array
              items:
                type: string
                description: tag for TreeNode
              nullable: true
            folderContent:
              type: array
              items:
                $ref: '#/components/schemas/BaseTreeNode'
              nullable: true
            included:
              type: array
              items:
                $ref: '#/components/schemas/BaseTreeNode'
              nullable: true
              description: Holds the included (prefetched) nodes.
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              description: Not for Heading
              nullable: true
    HeadingTreeNode:
      allOf:
        - $ref: '#/components/schemas/BaseTreeNode'
        - type: object
          description: Pedaled Vehicle
          properties:
             maxSpeed:
               description: The top speed in kilometers per hour rounded to the nearest integer.
               type: integer
               example: 83         
  responses:
    ErrorResponse429:
      description: Error respsone for 429
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            title: Too many requests
            status: 429
            detail: You have reach the threshold for request limiting. 30 request per minute.
tags:
  - name: TopicTree
    description: Endpoints for the topictree.