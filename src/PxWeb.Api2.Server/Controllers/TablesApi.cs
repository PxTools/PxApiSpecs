/*
 * PxApi
 *
 * This api lets you: Find a table and extract table metadata and data. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using PxWeb.Api2.Server.Attributes;
using PxWeb.Api2.Server.Models;

namespace PxWeb.Api2.Server.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class TablesApiController : ControllerBase
    { 
        /// <summary>
        /// Get the default selection for table by {id}.
        /// </summary>
        /// <remarks>This is a technical parameter that is used by PxWeb for initial loading of tables. Get information about the default selection for the /tables/{id}/data endpoint. </remarks>
        /// <param name="id">Id</param>
        /// <param name="lang">The language if the default is not what you want.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error response for 400</response>
        /// <response code="404">Error response for 404</response>
        /// <response code="429">Error response for 429</response>
        [HttpGet]
        [Route("/tables/{id}/defaultselection")]
        [ValidateModelState]
        [SwaggerOperation("GetDefaultSelection")]
        [SwaggerResponse(statusCode: 200, type: typeof(SelectionResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error response for 400")]
        [SwaggerResponse(statusCode: 404, type: typeof(Problem), description: "Error response for 404")]
        [SwaggerResponse(statusCode: 429, type: typeof(Problem), description: "Error response for 429")]
        public abstract IActionResult GetDefaultSelection([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "lang")]string? lang);

        /// <summary>
        /// Get metadata about table by {id}.
        /// </summary>
        /// <remarks>**Used for listing detailed information about a specific table** * List all variables and values and all other metadata needed to be able to fetch data </remarks>
        /// <param name="id">Id</param>
        /// <param name="lang">The language if the default is not what you want.</param>
        /// <param name="defaultSelection">This is a technical parameter that is used by PxWeb for initial loading of tables. If metadata should be included as if default selection would have been applied see /tables{id}/defaultselection endpoint. </param>
        /// <param name="savedQuery">This is a technical parameter that is used by PxWeb for initial loading of tables. Id for a saved query that should be be applied before metadata is returned see /savedqueries. </param>
        /// <param name="codelist">This is a technical parameter that is used by PxWeb. The identifier of the codelist that should be applied to the metadata. If not specified no codelist will be applied. </param>
        /// <response code="200">Success</response>
        /// <response code="400">Error response for 400</response>
        /// <response code="404">Error response for 404</response>
        /// <response code="429">Error response for 429</response>
        [HttpGet]
        [Route("/tables/{id}/metadata")]
        [ValidateModelState]
        [SwaggerOperation("GetMetadataById")]
        [SwaggerResponse(statusCode: 200, type: typeof(Dataset), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error response for 400")]
        [SwaggerResponse(statusCode: 404, type: typeof(Problem), description: "Error response for 404")]
        [SwaggerResponse(statusCode: 429, type: typeof(Problem), description: "Error response for 429")]
        public abstract IActionResult GetMetadataById([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "lang")]string? lang, [FromQuery (Name = "defaultSelection")]bool? defaultSelection, [FromQuery (Name = "savedQuery")]string? savedQuery, [FromQuery (Name = "codelist")]Dictionary<string, string>? codelist);

        /// <summary>
        /// Get Table by {id}.
        /// </summary>
        /// <param name="id">Id</param>
        /// <param name="lang">The language if the default is not what you want.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error response for 400</response>
        /// <response code="404">Error response for 404</response>
        /// <response code="429">Error response for 429</response>
        [HttpGet]
        [Route("/tables/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetTableById")]
        [SwaggerResponse(statusCode: 200, type: typeof(TableResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error response for 400")]
        [SwaggerResponse(statusCode: 404, type: typeof(Problem), description: "Error response for 404")]
        [SwaggerResponse(statusCode: 429, type: typeof(Problem), description: "Error response for 429")]
        public abstract IActionResult GetTableById([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "lang")]string? lang);

        /// <summary>
        /// Get data for table by {id}.
        /// </summary>
        /// <remarks>**Used for fetching data from a table** * Get data from a table by id. * The data can be filtered by variable codes and values. * The response can be formatted in different formats. * The placement of the variables can be customized with heading and stub variables. * If no selection is specified for filtering the data the default selection will be applied. </remarks>
        /// <param name="id">Id</param>
        /// <param name="lang">The language if the default is not what you want.</param>
        /// <param name="valuecodes"></param>
        /// <param name="codelist"></param>
        /// <param name="outputFormat"></param>
        /// <param name="outputFormatParams"></param>
        /// <param name="heading">Comma separated list of variable codes that should be placed in the heading in the resulting data</param>
        /// <param name="stub">Comma separated list of variable codes that should be placed in the stub in the resulting data</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error response for 400</response>
        /// <response code="403">Error response for 403</response>
        /// <response code="404">Error response for 404</response>
        /// <response code="429">Error response for 429</response>
        [HttpGet]
        [Route("/tables/{id}/data")]
        [ValidateModelState]
        [SwaggerOperation("GetTableData")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error response for 400")]
        [SwaggerResponse(statusCode: 403, type: typeof(Problem), description: "Error response for 403")]
        [SwaggerResponse(statusCode: 404, type: typeof(Problem), description: "Error response for 404")]
        [SwaggerResponse(statusCode: 429, type: typeof(Problem), description: "Error response for 429")]
        public abstract IActionResult GetTableData([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "lang")]string? lang, [FromQuery (Name = "valuecodes")]Dictionary<string, List<string>>? valuecodes, [FromQuery (Name = "codelist")]Dictionary<string, string>? codelist, [FromQuery (Name = "outputFormat")]OutputFormatType? outputFormat, [FromQuery (Name = "outputFormatParams")]List<OutputFormatParamType>? outputFormatParams, [FromQuery (Name = "heading")]List<string>? heading, [FromQuery (Name = "stub")]List<string>? stub);

        /// <summary>
        /// Get data for table by {id}.
        /// </summary>
        /// <param name="id">Id</param>
        /// <param name="lang">The language if the default is not what you want.</param>
        /// <param name="outputFormat"></param>
        /// <param name="outputFormatParams"></param>
        /// <param name="variablesSelection">A selection in JSON format for filtering the data. If no selection is specified the default selection will be applied.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error response for 400</response>
        /// <response code="403">Error response for 403</response>
        /// <response code="404">Error response for 404</response>
        /// <response code="429">Error response for 429</response>
        [HttpPost]
        [Route("/tables/{id}/data")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("GetTableDataByPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error response for 400")]
        [SwaggerResponse(statusCode: 403, type: typeof(Problem), description: "Error response for 403")]
        [SwaggerResponse(statusCode: 404, type: typeof(Problem), description: "Error response for 404")]
        [SwaggerResponse(statusCode: 429, type: typeof(Problem), description: "Error response for 429")]
        public abstract IActionResult GetTableDataByPost([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "lang")]string? lang, [FromQuery (Name = "outputFormat")]OutputFormatType? outputFormat, [FromQuery (Name = "outputFormatParams")]List<OutputFormatParamType>? outputFormatParams, [FromBody]VariablesSelection? variablesSelection);

        /// <summary>
        /// Get all Tables.
        /// </summary>
        /// <param name="lang">The language if the default is not what you want.</param>
        /// <param name="query">Selects only tables that that matches a criteria which is specified by the search parameter.</param>
        /// <param name="pastDays">Selects only tables that was updated from the time of execution going back number of days stated by the parameter pastDays. Valid values for past days are positive integers.</param>
        /// <param name="includeDiscontinued">Decides if discontinued tables are included in response.</param>
        /// <param name="pageNumber">Pagination: Decides which page number to return</param>
        /// <param name="pageSize">Pagination: Decides how many tables per page</param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/tables")]
        [ValidateModelState]
        [SwaggerOperation("ListAllTables")]
        [SwaggerResponse(statusCode: 200, type: typeof(TablesResponse), description: "Success")]
        public abstract IActionResult ListAllTables([FromQuery (Name = "lang")]string? lang, [FromQuery (Name = "query")]string? query, [FromQuery (Name = "pastDays")]int? pastDays, [FromQuery (Name = "includeDiscontinued")]bool? includeDiscontinued, [FromQuery (Name = "pageNumber")]int? pageNumber, [FromQuery (Name = "pageSize")]int? pageSize);
    }
}
