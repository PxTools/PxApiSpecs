/*
 * PxApi
 *
 * This api lets you: Find a table and extract table metadata and data. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using PxWeb.Api2.Server.Attributes;
using PxWeb.Api2.Server.Models;

namespace PxWeb.Api2.Server.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class SavedQueriesApiController : ControllerBase
    { 
        /// <summary>
        /// Save a query for later use.
        /// </summary>
        /// <param name="savedQuery">A saved query in JSON format without an Id.</param>
        /// <response code="201">Saved query created and returned with the id specified.</response>
        /// <response code="400">Error response for 400</response>
        /// <response code="429">Error response for 429</response>
        [HttpPost]
        [Route("/savedqueries")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateSaveQuery")]
        [SwaggerResponse(statusCode: 201, type: typeof(SavedQuery), description: "Saved query created and returned with the id specified.")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error response for 400")]
        [SwaggerResponse(statusCode: 429, type: typeof(Problem), description: "Error response for 429")]
        public abstract IActionResult CreateSaveQuery([FromBody]SavedQuery? savedQuery);

        /// <summary>
        /// Retrieves the content of a saved query.
        /// </summary>
        /// <remarks>**Used for retrieving a saved query** * Get the saved query by id. * The saved query contains the selection and other parameters that were used when the query was created. </remarks>
        /// <param name="id">Id</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error response for 400</response>
        /// <response code="404">Error response for 404</response>
        /// <response code="429">Error response for 429</response>
        [HttpGet]
        [Route("/savedqueries/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetSaveQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(SavedQueryResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error response for 400")]
        [SwaggerResponse(statusCode: 404, type: typeof(Problem), description: "Error response for 404")]
        [SwaggerResponse(statusCode: 429, type: typeof(Problem), description: "Error response for 429")]
        public abstract IActionResult GetSaveQuery([FromRoute (Name = "id")][Required]string id);

        /// <summary>
        /// Retrieves the selection that the saved query will result in. Selection expressions will be transformed into actual value codes.
        /// </summary>
        /// <param name="id">Id</param>
        /// <param name="lang">The language if the default is not what you want.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error response for 400</response>
        /// <response code="403">Error response for 403</response>
        /// <response code="404">Error response for 404</response>
        /// <response code="429">Error response for 429</response>
        [HttpGet]
        [Route("/savedqueries/{id}/selection")]
        [ValidateModelState]
        [SwaggerOperation("GetSavedQuerySelection")]
        [SwaggerResponse(statusCode: 200, type: typeof(SelectionResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error response for 400")]
        [SwaggerResponse(statusCode: 403, type: typeof(Problem), description: "Error response for 403")]
        [SwaggerResponse(statusCode: 404, type: typeof(Problem), description: "Error response for 404")]
        [SwaggerResponse(statusCode: 429, type: typeof(Problem), description: "Error response for 429")]
        public abstract IActionResult GetSavedQuerySelection([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "lang")]string? lang);

        /// <summary>
        /// Retrieves the data by running the saved query.
        /// </summary>
        /// <remarks>**Used for retrieving data by running a saved query** * Get the data by running the saved query. * The saved query contains the selection and other parameters that were used when the query was created. </remarks>
        /// <param name="id">Id</param>
        /// <param name="lang">The language if the default is not what you want.</param>
        /// <param name="outputFormat"></param>
        /// <param name="outputFormatParams"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Error response for 400</response>
        /// <response code="403">Error response for 403</response>
        /// <response code="404">Error response for 404</response>
        /// <response code="429">Error response for 429</response>
        [HttpGet]
        [Route("/savedqueries/{id}/data")]
        [ValidateModelState]
        [SwaggerOperation("RunSaveQuery")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error response for 400")]
        [SwaggerResponse(statusCode: 403, type: typeof(Problem), description: "Error response for 403")]
        [SwaggerResponse(statusCode: 404, type: typeof(Problem), description: "Error response for 404")]
        [SwaggerResponse(statusCode: 429, type: typeof(Problem), description: "Error response for 429")]
        public abstract IActionResult RunSaveQuery([FromRoute (Name = "id")][Required]string id, [FromQuery (Name = "lang")]string? lang, [FromQuery (Name = "outputFormat")]OutputFormatType? outputFormat, [FromQuery (Name = "outputFormatParams")]List<OutputFormatParamType>? outputFormatParams);
    }
}
