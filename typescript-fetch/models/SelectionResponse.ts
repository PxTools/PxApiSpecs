/* tslint:disable */
/* eslint-disable */
/**
 * PxApi
 * This api lets you do 2 things; Find a table(Navigation) and use a table (Table).  _Table below is added to show how tables can be described in yml._  **Table contains status code this API may return** | Status code    | Description      | Reason                      | | -------        | -----------      | ---------------------       | | 200            | Success          | The endpoint has delivered response for the request                      | | 400            | Bad request      | If the request is not valid | | 403            | Forbidden        | number of cells exceed the API limit | | 404            | Not found        | If the URL in request does not exist | | 429            | Too many request | Requests exceed the API time limit. Large queries should be run in sequence | | 50X            | Internal Server Error | The service might be down | 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VariablePlacementType } from './VariablePlacementType';
import {
    VariablePlacementTypeFromJSON,
    VariablePlacementTypeFromJSONTyped,
    VariablePlacementTypeToJSON,
    VariablePlacementTypeToJSONTyped,
} from './VariablePlacementType';
import type { VariableSelection } from './VariableSelection';
import {
    VariableSelectionFromJSON,
    VariableSelectionFromJSONTyped,
    VariableSelectionToJSON,
    VariableSelectionToJSONTyped,
} from './VariableSelection';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
    LinkToJSONTyped,
} from './Link';

/**
 * 
 * @export
 * @interface SelectionResponse
 */
export interface SelectionResponse {
    /**
     * The language code for the language used in this response
     * @type {string}
     * @memberof SelectionResponse
     */
    language: string;
    /**
     * 
     * @type {Array<Link>}
     * @memberof SelectionResponse
     */
    links: Array<Link>;
    /**
     * 
     * @type {Array<VariableSelection>}
     * @memberof SelectionResponse
     */
    selection: Array<VariableSelection>;
    /**
     * 
     * @type {VariablePlacementType}
     * @memberof SelectionResponse
     */
    placement?: VariablePlacementType;
}

/**
 * Check if a given object implements the SelectionResponse interface.
 */
export function instanceOfSelectionResponse(value: object): value is SelectionResponse {
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('selection' in value) || value['selection'] === undefined) return false;
    return true;
}

export function SelectionResponseFromJSON(json: any): SelectionResponse {
    return SelectionResponseFromJSONTyped(json, false);
}

export function SelectionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SelectionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'language': json['language'],
        'links': ((json['links'] as Array<any>).map(LinkFromJSON)),
        'selection': ((json['selection'] as Array<any>).map(VariableSelectionFromJSON)),
        'placement': json['placement'] == null ? undefined : VariablePlacementTypeFromJSON(json['placement']),
    };
}

export function SelectionResponseToJSON(json: any): SelectionResponse {
    return SelectionResponseToJSONTyped(json, false);
}

export function SelectionResponseToJSONTyped(value?: SelectionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'language': value['language'],
        'links': ((value['links'] as Array<any>).map(LinkToJSON)),
        'selection': ((value['selection'] as Array<any>).map(VariableSelectionToJSON)),
        'placement': VariablePlacementTypeToJSON(value['placement']),
    };
}

