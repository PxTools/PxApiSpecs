/* tslint:disable */
/* eslint-disable */
/**
 * PxApi
 * This api lets you do 2 things; Find a table(Navigation) and use a table (Table).  _Table below is added to show how tables can be described in yml._  **Table contains status code this API may return** | Status code    | Description      | Reason                      | | -------        | -----------      | ---------------------       | | 200            | Success          | The endpoint has delivered response for the request                      | | 400            | Bad request      | If the request is not valid | | 403            | Forbidden        | number of cells exceed the API limit | | 404            | Not found        | If the URL in request does not exist | | 429            | Too many request | Requests exceed the API time limit. Large queries should be run in sequence | | 50X            | Internal Server Error | The service might be down | 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FolderContentItemTypeEnum } from './FolderContentItemTypeEnum';
import {
    FolderContentItemTypeEnumFromJSON,
    FolderContentItemTypeEnumFromJSONTyped,
    FolderContentItemTypeEnumToJSON,
    FolderContentItemTypeEnumToJSONTyped,
} from './FolderContentItemTypeEnum';
import type { Table } from './Table';
import {
    TableFromJSON,
    TableFromJSONTyped,
    TableToJSON,
    TableToJSONTyped,
} from './Table';
import type { PathElement } from './PathElement';
import {
    PathElementFromJSON,
    PathElementFromJSONTyped,
    PathElementToJSON,
    PathElementToJSONTyped,
} from './PathElement';
import type { TimeUnit } from './TimeUnit';
import {
    TimeUnitFromJSON,
    TimeUnitFromJSONTyped,
    TimeUnitToJSON,
    TimeUnitToJSONTyped,
} from './TimeUnit';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
    LinkToJSONTyped,
} from './Link';

/**
 * 
 * @export
 * @interface TableResponse
 */
export interface TableResponse extends Table {
    /**
     * The language code (ISO 639) for this response
     * @type {string}
     * @memberof TableResponse
     */
    language: string;
}



/**
 * Check if a given object implements the TableResponse interface.
 */
export function instanceOfTableResponse(value: object): value is TableResponse {
    if (!('language' in value) || value['language'] === undefined) return false;
    return true;
}

export function TableResponseFromJSON(json: any): TableResponse {
    return TableResponseFromJSONTyped(json, false);
}

export function TableResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TableResponse {
    if (json == null) {
        return json;
    }
    return {
        ...TableFromJSONTyped(json, true),
        'language': json['language'],
    };
}

export function TableResponseToJSON(json: any): TableResponse {
    return TableResponseToJSONTyped(json, false);
}

export function TableResponseToJSONTyped(value?: TableResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...TableToJSONTyped(value, true),
        'language': value['language'],
    };
}

