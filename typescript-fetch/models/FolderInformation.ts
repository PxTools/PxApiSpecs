/* tslint:disable */
/* eslint-disable */
/**
 * PxApi
 * This api lets you do 2 things; Find a table(Navigation) and use a table (Table).  _Table below is added to show how tables can be described in yml._  **Table contains status code this API may return** | Status code    | Description      | Reason                      | | -------        | -----------      | ---------------------       | | 200            | Success          | The endpoint has delivered response for the request                      | | 400            | Bad request      | If the request is not valid | | 403            | Forbidden        | number of cells exceed the API limit | | 404            | Not found        | If the URL in request does not exist | | 429            | Too many request | Requests exceed the API time limit. Large queries should be run in sequence | | 50X            | Internal Server Error | The service might be down | 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FolderContentItemTypeEnum } from './FolderContentItemTypeEnum';
import {
    FolderContentItemTypeEnumFromJSON,
    FolderContentItemTypeEnumFromJSONTyped,
    FolderContentItemTypeEnumToJSON,
    FolderContentItemTypeEnumToJSONTyped,
} from './FolderContentItemTypeEnum';
import type { FolderContentItem } from './FolderContentItem';
import {
    FolderContentItemFromJSON,
    FolderContentItemFromJSONTyped,
    FolderContentItemToJSON,
    FolderContentItemToJSONTyped,
} from './FolderContentItem';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
    LinkToJSONTyped,
} from './Link';

/**
 * Folder information item
 * @export
 * @interface FolderInformation
 */
export interface FolderInformation extends FolderContentItem {
    /**
     * 
     * @type {Array<string>}
     * @memberof FolderInformation
     */
    tags?: Array<string>;
    /**
     * Links to ...
     * @type {Array<Link>}
     * @memberof FolderInformation
     */
    links: Array<Link> | null;
}



/**
 * Check if a given object implements the FolderInformation interface.
 */
export function instanceOfFolderInformation(value: object): value is FolderInformation {
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function FolderInformationFromJSON(json: any): FolderInformation {
    return FolderInformationFromJSONTyped(json, false);
}

export function FolderInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolderInformation {
    if (json == null) {
        return json;
    }
    return {
        ...FolderContentItemFromJSONTyped(json, true),
        'tags': json['tags'] == null ? undefined : json['tags'],
        'links': (json['links'] == null ? null : (json['links'] as Array<any>).map(LinkFromJSON)),
    };
}

export function FolderInformationToJSON(json: any): FolderInformation {
    return FolderInformationToJSONTyped(json, false);
}

export function FolderInformationToJSONTyped(value?: FolderInformation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...FolderContentItemToJSONTyped(value, true),
        'tags': value['tags'],
        'links': (value['links'] == null ? null : (value['links'] as Array<any>).map(LinkToJSON)),
    };
}

